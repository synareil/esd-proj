version: '3.8'

services:
  shipping:
    build: ./shipping/.
    ports:
      - "5005:5000"
    environment:
      - dbURL=mysql+mysqlconnector://root:password@shipping-db:3306/proj_shipping
    depends_on:
      - shipping-db
    networks:
      - app_network
      - shipping_network

  shipping-db:
    image: mysql:5.7
    ports:
      - "6005:3306"
    networks:
      - shipping_network
    environment:
      MYSQL_DATABASE: proj_shipping
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data5:/var/lib/mysql

  cart:
    build: ./cart/.
    ports:
      - "5004:5000"
    environment:
      - dbURL=mysql+mysqlconnector://root:password@cart-db:3306/proj_cart
    depends_on:
      - cart-db

  cart-db:
    image: mysql:5.7
    ports:
      - "6004:3306"
    environment:
      MYSQL_DATABASE: proj_cart
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data4:/var/lib/mysql

  order:
    build: ./orders/.
    ports:
      - "5002:5000"
    environment:
      - dbURL=mysql+mysqlconnector://root:password@order-db:3306/proj_order
    depends_on:
      - order-db

  order-db:
    image: mysql:5.7
    ports:
      - "6002:3306"
    environment:
      MYSQL_DATABASE: proj_order
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data2:/var/lib/mysql

  inventory:
    build: ./inventory/.
    ports:
      - "5001:5000"
    environment:
      - dbURL=mysql+mysqlconnector://root:password@inventory-db:3306/proj_inventory
    depends_on:
      - inventory-db

  inventory-db:
    image: mysql:5.7
    ports:
      - "6001:3306"
    environment:
      MYSQL_DATABASE: proj_inventory
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql

  marketing-content:
    build: ./marketingcontent/.
    volumes:
      - ./marketingcontent/.:/usr/src/app
    ports:
      - "5006:80"
    depends_on:
      - marketing-content-db
      - rabbitmq
    env_file:
      - ./env_files/marketing_content.env
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload

  marketing-content-db:
    image: postgres:13
    ports:
      - "6006:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase

  marketing-communication:
    build: ./marketingcommunication/.
    ports:
      - "5003:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./env_files/marketing_communication.env

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 20s
      timeout: 5s
      retries: 5

  consul:
    image: consul:1.15
    container_name: consul
    command: agent -dev -ui -client 0.0.0.0
    networks:
      app_network:
        ipv4_address: 172.20.0.2
    ports:
      - "8500:8500" # Consul HTTP API
      - "8600:8600/udp" # Consul DNS

  kong-database:
    image: postgres:9.6
    container_name: kong-database
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    networks:
      app_network:
        ipv4_address: 172.20.0.11
    ports:
      - "5434:5432"
    volumes:
      - kong-database:/var/lib/postgresql/data

  kong:
    image: kong:latest
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: 172.20.0.11
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
      KONG_DNS_RESOLVER: '172.20.0.2:8600'
    networks:
      app_network:
        ipv4_address: 172.20.0.10
    ports:
      - "9000:8000"
      - "9443:8443"
      - "9001:8001"
      - "9444:8444"
    depends_on:
      - kong-database
      - consul
    links:
      - kong-database:kong-database

volumes:
  postgres_data:
  rabbitmq_data:
  db-data:
  db-data2:
  db-data4:
  db-data5:
  kong-database:

networks:
  app_network:
    name: app_network
    ipam:
      config:
        - subnet: "172.20.0.0/16"
  shipping_network:
    name: shipping_network
  cart_network:
    name: cart_network
  order_network:
    name: order_network
  inventory_network:
    name: inventory_network
  marketing_network:
    name: marketing_network
